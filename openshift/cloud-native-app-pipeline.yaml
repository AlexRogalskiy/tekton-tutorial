---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: cloud-native-app
spec:
  description: >-
    The Pipline to buld and deploy the Hello World Java App https://github.com/redhat-scholars/tekton-tutorial/apps/greeter as Kubernetes Service.
  params:
    - name: image-name
      description: The fully qualified image name
      default: image-registry.openshift-image-registry.svc:5000/tektontutorial/helloworld
    - name: context-dir
      description: >-
        The context directory within the source repository, possible values are: 
        * apps/greeter/java/springboot
        * apps/greeter/java/quarkus
    - name: manifests-folder
      description: The Kubernetes manifest files folder within source repo
      default: k8s
    - name: github-repo-url
      description: The GitHub Repo of the Java Application
      default: https://github.com/redhat-scholars/tekton-tutorial
    - name: github-repo-revision
      description: The GitHub revision to use
      default: master
  workspaces:
    - name: source
    - name: maven-settings
  tasks:
    - name: clone-sources
      taskRef:
        name: git-clone
        kind: ClusterTask
      params:
        - name: url
          value: $(params.github-repo-url)
        - name: revision
          value: $(params.github-repo-revision)
        # just to do a fresh clone, as we already have the directory cloned
        # to reuse it we can exlude this step
        - name: deleteExisting
          value: 'true'
      workspaces:
        - name: output
          workspace: source
    - name: build-java-test
      taskRef:
        name: maven
        kind: ClusterTask
      runAfter:
        - clone-sources
      params:
        - name: GOALS
          value: ['-B', 'clean', 'test']
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: source
      workingDir: '$(workspaces.source.path)/$(params.context-dir)'
    - name: build-java-app
      taskRef:
        name: maven
        kind: ClusterTask
      runAfter:
        - build-java-test
      params:
        - name: GOALS
          value: ['-B', '-DskipTests', 'clean', 'package']
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: source
      workingDir: '$(workspaces.source.path)/$(params.context-dir)'
    - name: build-java-app-image
      taskRef:
        name: buildah
        kind: ClusterTask
      runAfter:
        - build-java-app
      params:
        - name: IMAGE
          value: '$(params.image-name)'
        # since pushing to internal registry we skip TLS verify
        - name: TLSVERIFY
          value: 'false'
      workspaces:
        - name: source
          workspace: source
      workingDir: '$(workspaces.source.path)/$(params.context-dir)'
    - name: deploy-k8s-service
      taskRef:
        name: openshift-client
        kind: ClusterTask
      runAfter:
        - build-java-app-image
      params:
        - name: ARGS
          value:
            - 'apply'
            - '--filename'
            - '$(manifests-folder)'
      workingDir: '$(workspaces.source.path)/$(params.context-dir)'
