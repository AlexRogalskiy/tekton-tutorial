apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: build-app
spec:
  inputs:
    resources:
      - name: source
        type: git
    params:
      - name: contextDir
        description: the context dir within source
        default: .
      - name: mavenMirrorUrl
        description: the maven mirrror url
        default: https://repo.maven.apache.org/maven2/
      - name: destinationImage
        description: the fully qualified image name
        default: "$(outputs.resources.builtImage.url)"
      - name: dockerFile
        description: the docker file to used for building the application
        default: Dockerfile
      - name: tlsVerify
        description: tls verify
        type: string
        default: "false"
  outputs:
    resources:
      - name: builtImage
        type: image
  stepTemplate:
    volumeMounts:
      - name: varlibc
        mountPath: /var/lib/containers
  steps:
    - name: build-sources
      image: docker.io/maven:3.6.3-jdk-8-slim
      command:
        - mvn
      args:
        - -DskipTests
        - clean
        - package
      env:
        - name: user.home
          value: /home/tekton
      workingDir: "/workspace/source/$(inputs.params.contextDir)"
    - name: build-image
      image: quay.io/buildah/stable
      command:
        - "buildah"
      args:
        - "bud"
        - "--layers"
        - "-f"
        - "$(inputs.params.dockerFile)"
        - "-t"
        - "$(inputs.params.destinationImage)"
        - "."
      securityContext:
        runAsUser: 0
      workingDir: "/workspace/source/$(inputs.params.contextDir)"
    - name: push-image
      image: quay.io/buildah/stable
      command:
        - "buildah"
      args:
        - "push"
        - "--tls-verify=$(inputs.params.tlsVerify)"
        - $(inputs.params.destinationImage)
        - "docker://$(inputs.params.destinationImage)"
      securityContext:
        runAsUser: 0
      workingDir: "/workspace/source/$(inputs.params.contextDir)"
  volumes:
    - name: varlibc
      emptyDir: {}
